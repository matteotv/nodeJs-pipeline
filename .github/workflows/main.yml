# This is a basic workflow to help you get started with Actions

name: ci/cd-test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master]
  pull_request:
    branches: [ master]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildAndTest:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
          
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 16.14.2 
          
      - name: packaging lambda app 
        run: | 
             npm install
             npm run test
             npm prune --production
     
     # This workflow contains a single job called "build"
  packageArtifacts:
    needs: buildAndTest
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Setup Node.js environment
        uses: actions/setup-node@v3.0.0
        with:
          node-version: 16.14.2 
          
      - name: test lambda app 
        run: | 
             npm install 
             
      - name: Zip output
        run: zip -qq -r lambdatest.zip src node_modules package.json events

      - uses: actions/upload-artifact@v2
        with:
          name: lambdatest.zip
          path: lambdatest.zip

  deploy:
    needs: packageArtifacts
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1.2.1

      - uses: actions/download-artifact@v2
        with:
          name: lambdatest.zip
          path: output

      - name: provision Lambda
        run: | 
              cp ./output/lambdatest.zip ./terraform/lambdatest.zip
              cd terraform 
              terraform init
              export TF_VAR_access_key="${{secrets.ACCESS_KEY}}"
              export TF_VAR_secret_key="${{secrets.SECRET_KEY}}"
              terraform apply --auto-approve
              sleep 10
              terraform destroy --auto-approve 
                
        
          
        
